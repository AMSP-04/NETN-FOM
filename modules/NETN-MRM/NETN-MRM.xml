<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<objectModel xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/1516.2-2010/IEEE1516-DIF-2010.xsd" xmlns="http://standards.ieee.org/IEEE1516-2010" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelIdentification notes="netn-mrm_overview">
        <name>NETN-MRM</name>
        <type>FOM</type>
        <version>3.0</version>
        <modificationDate>2024-03-10</modificationDate>
        <securityClassification>Not Classified</securityClassification>
        <purpose>The NATO Education and Training Network Multi-Resolution Modelling (NETN-MRM) module supports federations with entities represented at multiple resolution levels.</purpose>
        <applicationDomain></applicationDomain>
        <description>Models of real-world objects, processes and phenomena are used to create a synthetic representation suitable for the simulation. Entities can be represented as individual objects or as part of an aggregated object. Entity representation can change during the simulation and switch between different levels of aggregation and individual physical entities.  

The NETN-MRM module specifies aggregation, disaggregation, division and merging of aggregate entities.</description>
        <useLimitation>NETN-MRM covers the following cases: 
* Aggregation of subunits into a representation of their parent unit
* Disaggregation of a unit representation into subunits
* Division of unit into subunits or physical entities
* Merging of previously divided entities into a unit</useLimitation>
        <useHistory notes="netn-mrm_1_1">v1.1 - Initial version of NETN-MRM FOM Module released as part of NETN-FOM v2.0.</useHistory>
        <useHistory notes="netn-mrm_2_0">v2.0 - Updated version by MSG-163 to be part of NETN-FOM v3.0.</useHistory>
        <useHistory notes="netn-mrm_3_0">v3.0 - Updated version by MSG-191 to be part of NATO-FOM v4.0</useHistory>
        <poc>
            <pocType>Release authority</pocType>
            <pocName>NATO Modelling and Simulation Group</pocName>
            <pocOrg>NATO Science and Technology Organization</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-106 Enhanced CAX Architecture, Desing and Methodology</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-134 NATO Distributed Simulation Architecture &amp; Design, Compliance Testing and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-163 Evolution of NATO Standards for Federated Simulation</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-191 NATO Standards for Federated Simulation and Services for Integration, Verification and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-223 Evolving M&amp;S applications and services for compliance with NATO standards for federated simulation</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <reference>
            <type>Dependency</type>
            <identification>NETN-BASE</identification>
        </reference>
        <reference>
            <type>Dependency</type>
            <identification>NETN-SMC</identification>
        </reference>
        <reference>
            <type>Dependency</type>
            <identification>NETN-ORG</identification>
        </reference>
        <other>
Copyright Â© 2023 by NATO/OTAN. All rights reserved.
This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.

Above license gives you the right to use and redistribute the NETN FOM Module (XML file and Documentation) in its entirety without modification. You are also allowed to develop your own new FOM Modules (in separate XML files and separate documentation) that build-on/extends the NETN module by reference. You are NOT allowed to modify the NETN FOM Module or its documentation without prior permission by the NATO Modelling and Simulation Group.</other>
        <glyph type="png" height="48" width="48" alt="">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</glyph>
    </modelIdentification>
    <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
            <objectClass>
                <name>BaseEntity</name>
                <sharing>Subscribe</sharing>
                <semantics>A base class of aggregate and discrete scenario domain participants. The BaseEntity class is characterized by being located at a particular location in space and independently movable, if capable of movement at all. It specifically excludes elements normally considered to be a component of another element. The BaseEntity class is intended to be a container for common attributes for entities of this type. Since it lacks sufficient class specific attributes that are required for simulation purposes, federates cannot publish objects of this class. Certain simulation management federates, e.g. viewers, may subscribe to this class. Simulation federates will normally subscribe to one of the subclasses, to gain the extra information required to properly simulate the entity.</semantics>
                <attribute>
                    <name>Status</name>
                    <dataType>ActiveStatusEnum8</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. Indicates if this entity is currently being simulated or not. During an inactive state, the attribute values may not reflect accurate or current values. All attributes are updated to represent the current status of the object instance before setting the state to Active. The default is `Active`.</semantics>
                </attribute>
                <attribute>
                    <name>SourceAggregate</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. Reference to an active `AggregateEnity` instance which is the source of a NETN-MRM division. The default value is all zeros representing no source AggregateEntity.</semantics>
                </attribute>
                <attribute>
                    <name>ParentAggregate</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. If this simulation entity results from a disaggregation, this attribute refers to the disaggregated `AggregateEntity`. The default value is no reference, i.e. all zeros.</semantics>
                </attribute>
                <attribute>
                    <name>OrganizationElement</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional: Reference to an existing NETN-ORG  organization element, e.g. a `Unit` or `Equipment` represented by this simulation entity. The default value is no related organization element, i.e. all zeros.</semantics>
                </attribute>
                <objectClass>
                    <name>AggregateEntity</name>
                    <sharing>PublishSubscribe</sharing>
                    <semantics>A group of one or more separate objects that operate together as part of an organization. These objects may be discrete, may be other aggregate objects, or may be a mixture of both.</semantics>
                    <attribute>
                        <name>DividedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <updateType>NA</updateType>
                        <updateCondition>NA</updateCondition>
                        <ownership>DivestAcquire</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Reference to other aggregate or physical entities divided from the `AggregateEntity` to represent specific subsets of holdings.</semantics>
                    </attribute>
                    <attribute>
                        <name>DisaggregatedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <updateType>NA</updateType>
                        <updateCondition>NA</updateCondition>
                        <ownership>DivestAcquire</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Reference to the disaggregated entities after disaggregation of this `AggregateEntity`. Each element should refer to an existing entity in the federation. The `Status` of this `AggregateEntity` shall be inactive if disaggregated entities exist.|</semantics>
                    </attribute>
                </objectClass>
            </objectClass>
        </objectClass>
    </objects>
    <interactions>
        <interactionClass>
            <name>HLAinteractionRoot</name>
            <interactionClass>
                <name>SMC_EntityControl</name>
                <interactionClass>
                    <name>Aggregate</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application modelling the `AggregateEntity` to perform aggregation of the `DisaggregatedEntities`.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>Disaggregate</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to disaggregate the indicated `AggregateEntity`.</semantics>
                    <parameter>
                        <name>Formation</name>
                        <dataType>FormationStruct</dataType>
                        <semantics>The formation of the disaggregated units.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>Divide</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to divide the `AggregateEntity` into multiple simulated entities.</semantics>
                    <parameter>
                        <name>Equipment</name>
                        <dataType>ArrayOfResourceStatus</dataType>
                        <semantics>Optional. Amount of equipment of different type and health status to be divided.</semantics>
                    </parameter>
                    <parameter>
                        <name>Personnel</name>
                        <dataType>ArrayOfResourceStatus</dataType>
                        <semantics>Optional. Amount of personnel of different type and health status to be divided.</semantics>
                    </parameter>
                    <parameter>
                        <name>Supplies</name>
                        <dataType>ArrayOfSupplyStatus</dataType>
                        <semantics>Optional. Amount of supplies to divide.</semantics>
                    </parameter>
                    <parameter>
                        <name>RegisterPhysicalEntities</name>
                        <dataType>HLAboolean</dataType>
                        <semantics>Optional. If true, all Equipment of type Platform and Lifeform are published as individual objects in the federation.</semantics>
                    </parameter>
                    <parameter>
                        <name>Formation</name>
                        <dataType>FormationStruct</dataType>
                        <semantics>The formation of the divided units.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>Merge</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to merge an `AggregateEntity` with divided entities.</semantics>
                    <parameter>
                        <name>DividedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Required. A subset of identifiers from the DividedEntities attribute of the referenced AggregateEntity. The set of identifiers indicates which divided entities to merge with the AggregateEntity.</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
            <interactionClass>
                <name>SMC_Response</name>
                <sharing>PublishSubscribe</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>The response indicates whether the related action was accepted or rejected/failed by a federate. A single response per sent action is expected.</semantics>
            </interactionClass>
        </interactionClass>
    </interactions>
    <dataTypes>
        <enumeratedDataTypes>
            <enumeratedData>
                <name>EntityControlActionEnum</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Enumeration of Entity Control Actions. The datatype is expected to be extended in specific modules defining additional actions.</semantics>
                <enumerator>
                    <name>Aggregate</name>
                    <value>100</value>
                </enumerator>
                <enumerator>
                    <name>Disaggregate</name>
                    <value>101</value>
                </enumerator>
                <enumerator>
                    <name>Divide</name>
                    <value>102</value>
                </enumerator>
                <enumerator>
                    <name>Merge</name>
                    <value>103</value>
                </enumerator>
            </enumeratedData>
        </enumeratedDataTypes>
    </dataTypes>
    <notes>
        <note>
            <label>netn-mrm_1_1</label>
            <semantics>NETN-MRM FOM Module v1.1.1 was developed by MSG-106 and released 2014-05-15.</semantics>
        </note>
        <note>
            <label>netn-mrm_2_0</label>
            <semantics>* Changed Filename to NETN-MRM.xml 
* Changed `modelIdentification` `securityClassification` from `unclassified` to `Not Classified` 
* Changed `modelIdentification` `other` to include license information 
* Changed `modelIdentification` `reference` to only refer to directly dependent FOM Modules 
* Added `modelIdentification` `useLimitation` to reflect Scope of FOM Module 
* Added `modelIdentification` `glyph` 
* Updated `modelIdentification` `purpose` to reflect Purpose of FOM Module 
* Updated `modelIdentification` `description` to reflect Introduction of FOM Module 
* Updated `modelIdentification` `name` to NATO Education and Training Network (NETN) Multi-Resolution Modelling (MRM) Module 
* Updated `modelIdentification` `poc` to include Release authority, Primary authors and Contributors 
* Updated `modelIdentification` `applicationDomain` to empty. 
* Removed NETN-MRM dependency on NETN-TMR. 
* Merged NETN-Aggregate to NETN-MRM. 
* Removed InteractionClass `MRM_Object` 
* Removed InteractionClass `MRM_TriggerResponse` 
* Removed InteractionClass `MRM_Trigger` 
* Renamed InteractionClass `MRM_DisaggregationRequest` 
* Renamed InteractionClass `MRM_AggregationRequest` 
* Removed InteractionClass `MRM_DisaggregationResponse` 
* Removed InteractionClass `MRM_AggregationResponse` 
* Removed InteractionClass `MRM_CancelRequest` 
* Removed InteractionClass `MRM_ActionComplete` 
* Added InteractionClass `MRM_Interaction` 
* Added InteractionClass `Request` 
* Added InteractionClass `Aggregate` 
* Added InteractionClass `Disaggregate` 
* Added InteractionClass `Divide` 
* Added InteractionClass `Merge` 
* Added InteractionClass `Inactivate` 
* Added InteractionClass `Activate` 
* Added InteractionClass `QuerySupportedCapabilities` 
* Added InteractionClass `CapabilitiesSupported` 
* Added InteractionClass `Response` 
* Removed datatype `AggregateStateEnum32` 
* Removed datatype `EntityListVariableLengthStruct` 
* Removed datatype `UpdateTypeEnum32` 
* Removed datatype `SupportRelationshipStruct` 
* Removed datatype `FacingDegreesFloat32` 
* Removed datatype `CoverStatusStruct` 
* Removed datatype `CoverEnum8` 
* Removed datatype `CombatValueFloat64` 
* Removed datatype `SupportRelationshipEnum8` 
* Removed datatype `EchelonEnum8` 
* Removed datatype `PercentageUint32` 
* Renamed datatype `NonComplianceReasonEnum` to `MRM_ResponseStatusEnumType` 
* Replaced datatype `PercentageUint32` with `PercentUnsignedInteger32` 
* Replaced datatype `FacingDegreesFloat32` with `DirectionDegreesFloat32` 
* Replaced datatype `TimeSecInt64` with `EpochTimeSecInt64` 
* Moved datatype `QuantityFloat64` to NETN-BASE 
* Changed datatype of `NETN_Aggregate.Mounted` to `PercentFloat64` 
* Changed datatype of `NETN_Aggregate.SourceUnit` to `UuidArrayOfHLAbyte16` 
* Changed datatype of `NETN_Aggregate.Symbol` to `SymbolIdentifier` 
* Changed datatype of `NETN_Aggregate.Footprint` to `GeocentricPolygon ` 
* Added attribute `Route` for  object class `NETN_Aggregate` 
* Added attribute `Destination` for  object class `NETN_Aggregate` 
* Updated semantics of attribute `NETN_Aggregate.UniqueId` 
* Renamed attribute `NETN_Aggregate.UniqueID` to `NETN_Aggregate.UniqueId` 
* Renamed attribute `Symbol` of `NETN_Aggregate` to `SymbolId` 
* Renamed attribute `UnitEquipment`  of `NETN_Aggregate` to `EquipmentStatus` 
* Renamed attribute `UnitPersonnel`  of `NETN_Aggregate` to `PersonnelStatus` 
* Renamed attribute `UnitSupplies`  of `NETN_Aggregate` to `Supplies` 
* Removed attribute `Footprint`of `NETN_Aggregate` object class 
* Removed attribute `SupportUnit` of `NETN_Aggregate` object class 
* Added field `ResourceType` to datatype `ResourceStatusNumberStruct` 
* Changed datatype of attribute `CoverStatus` of `NETN_Aggregate` to `PercentFloat64` 
* Changed datatype of attribute `CombatValue` of `NETN_Aggregate` to `PercentFloat64` 
* Changed datatype of attribute `EntityList` of `NETN_Aggregate` to `ArrayOfEntityStruct` 
* Changed datatype of attribute `Echelon` of `NETN_Aggregate` to `EchelonEnum32` 
* Added field `UnitAllocation` to datatype `EntityStruct`</semantics>
        </note>
        <note>
            <label>netn-mrm_3_0</label>
            <semantics>* Removed `NETN_Aggregate` object class 
* Replaced `NETN_Aggregate` attribute `UniqueId` with NETN-BASE `HLAobjectRoot` attribute `UniqueId` 
* Replaced `NETN_Aggregate` attribute `Status` with NETN-MRM `BaseEntity` attribute `Status` 
* Replaced `NETN_Aggregate` attribute `SubunitList` with NETN-MRM `AggregateEntity` attribute `DisaggregatedEntities` 
* Replaced `NETN_Aggregate` attribute `ParentUnit` with NETN-MRM `BaseEntity` attribute `ParentAggregate` 
* Replaced `NETN_Aggregate` attribute `DividedUnitList` with NETN-MRM `AggregateEntity` attribute `DividedEntities` 
* Replaced `NETN_Aggregate` attribute `SourceUnit` with NETN-MRM `BaseEntity` attribute `SourceAggregate` 
* Removed `NETN_Aggregate` attribute `EmbeddedUnitList` 
* Replaced `NETN_Aggregate` attribute `HigherHeadquarters` with NETN-ORG `Unit` attribute `HigherHeadquarters` 
* Replaced `NETN_Aggregate` attribute `Mounted` with NETN-ENTITY `BaseEntity` attribute `HostEntitiy` and NETN-Physical `AggregateEntity` attribute `MountProgress` 
* Replaced `NETN_Aggregate` attribute `SymbolId` with NETN-ENTITY `BaseEntity` attribute `Symbol` 
* Replaced `NETN_Aggregate` attribute `Callsign` with NETN-ENTITY `BaseEntity` attribute `Callsign` 
* Replaced `NETN_Aggregate` attribute `Echelon` with NETN-ENTITY `AggregateEntity` attribute `Echelon` 
* Removed `NETN_Aggregate` attribute `EntityList` 
* Replaced `NETN_Aggregate` attribute `SuppliesStatus` with NETN-LOG `AggregateEntity` attribute `SuppliesStatus` 
* Replaced `NETN_Aggregate` attribute `EquipmentStatus` with NETN-LOG `AggregateEntity` attribute `EquipmentStatus` 
* Replaced `NETN_Aggregate` attribute `PersonnelStatus` with NETN-LOG `AggregateEntity` attribute `PersonnelStatus` 
* Replaced `NETN_Aggregate` attribute `VisualSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures` 
* Replaced `NETN_Aggregate` attribute `HUMINTSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures` 
* Replaced `NETN_Aggregate` attribute `ElectronicSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures`  `ElectronicSignature` 
* Replaced `NETN_Aggregate` attribute `CombatValue` with NETN-ENTITY `AggregateEntity` attribute `CombatValue` 
* Replaced `NETN_Aggregate` attribute `CoverStatus` with NETN-ENTITY `BaseEntity` attribute `Protection` 
* Replaced `NETN_Aggregate` attribute `CaptureStatus` with NETN-ETR `BaseEntity` attribute `CaptureStatus` 
* Removed `NETN_Aggregate` attribute `Mission` 
* Replaced `NETN_Aggregate` attribute `Activity` with NETN-ETR `BaseEntity` attribute `Activity` 
* Replaced `NETN_Aggregate` attribute `Route` with NETN-ETR `BaseEntity` attribute `Route` 
* Replaced `NETN_Aggregate` attribute `Destination` with NETN-ETR `BaseEntity` attribute `Destination` 
* Replaced `NETN_Aggregate` attribute `WeaponsControlOrder` with NETN-ENTITY `AggregateEntity` attribute `WeaponsControlOrder` 
* Removed `MRM_Interaction` interaction class 
* Replaced `MRM_Interaction` parameter `EventId` with NETN-BASE `HLAinteractionRoot` attribute `UniqueId` 
* Removed `CapabilitiesSupported` interaction class 
* Replaced `CapabilitiesSupported` parameter `CapabilityNames` with `AggregateEntity` attribute `SupportedAggregationActions` 
* Removed `Request` interaction class 
* Removed `Request` parameter `Federate` 
* Replaced `Request` parameter `AggregateUnit` with NETN-ETR `ETR_SimCon` parameter `SimulatedEntity` 
* Replaced `Response` interaction class with NETN-ETR `Response` interaction class 
* Removed `Activate` interaction class 
* Removed `Deactivate` interaction class 
* Removed `QuerySupportedCapabilities` interaction class 
* Removed `Aggregate` parameter `RemoveSubunits` 
* Renamed `Merge` parameter `Subunits` to `DividedEntities` 
 
 
* Removed datatype `MissionStruct` 
* Removed datatype `EntityStruct` 
* Removed datatype `ArrayOfEntityStruct` 
* Removed datatype `ConcealmentEnum32` 
* Removed datatype `EntityCategoryEnum32` 
* Moved all the rest of datatype to NETN-Physical 
* Added datatype `AggregationActionEnum` 
* Added datatype `AggregationActionArray` 
 
* Replaced all use of Array datatype `NETN_ArrayOfSupplyStruct` with `SupplyStructArray` 
* Replaced all use of `PercentUnsignedInteger32` with `PercentFloat32` 
* Replaced all use of `PercentFloat64` with `PercentFloat32`</semantics>
        </note>
        <note>
            <label>netn-mrm_overview</label>
            <semantics>## Overview 
 
NETN-MRM extends the RPR-FOM `BaseEntity` and `AggregateEntity` object classes and defines NETN-SMC entity control interactions to trigger aggregation, disaggregation, division, and merge actions for simulated aggregated entities. 
 
```mermaid 
classDiagram 
direction LR

HLAinteractionRoot &lt;|-- SMC_EntityControl 
HLAinteractionRoot : UniqueId(NETN-BASE) 
SMC_EntityControl &lt;|-- Aggregate 
SMC_EntityControl &lt;|-- Disaggregate 
SMC_EntityControl &lt;|-- Divide 
SMC_EntityControl &lt;|-- Merge 
HLAinteractionRoot &lt;|-- SMC_Response 
SMC_EntityControl : Entity(NETN-SMC) 
Disaggregate : Formation 
Divide : Equipment 
Divide : Formation 
Divide : Personnel 
Divide : RegisterPhysicalEntities 
Divide : Supplies 
Merge : DividedEntities 
SMC_Response : Action(NETN-SMC)
SMC_Response : Status(NETN-SMC)
``` 
 
Implementing these MRM actions relies on knowledge of units' structure, organization, and equipment defined by NETN-ORG. 
 
A NETN-ORG `Unit` can be represented in the federation as:
* a single `AggregateEntity` object or
* a collection of multiple `AggregateEntity` or `PhysicalEntity` objects. 

 
```mermaid 
classDiagram 
direction LR 
 
HLAobjectRoot &lt;|-- BaseEntity 
BaseEntity &lt;|-- AggregateEntity 
 
HLAobjectRoot : UniqueId(NETN-BASE) 
 
BaseEntity : OrganizationElement 
BaseEntity : ParentAggregate 
BaseEntity : SourceAggregate 
BaseEntity : Status 
BaseEntity : SupportedActions(NETN-SMC) 
AggregateEntity : DisaggregatedEntities 
AggregateEntity : DividedEntities 
``` 
 
The representation of units in the federation can change during runtime. Use the MRM control actions to request aggregation or disaggregation or to split the entity by dividing holdings among multiple aggregate and physical entity objects.
 
## General Pattern 
 
All NETN-MRM entity control actions use the same pattern based on the NETN-SMC entity control pattern where a federate (R) request and `SMC_EntityContol` action for an `AggregateEntity` (A). The federate (F) with primary modelling responsibility of (A) executes the action and responds using `SMC_Response` to (R).
 

 
```mermaid 
sequenceDiagram 
autonumber
 
R-&gt;&gt;F: SMC_EntityControl(A)

F-&gt;&gt;Federation: execute action 
F-&gt;&gt;R: SMC_Response 
``` 

Use the `BaseEntity` attribute `SupportedActions` to check the simulation entity's support before sending a NETN-MRM entity control action.

 
## Disaggregation 
 
A federate application (F) can perform disaggregation of an `AggregateEntity` (A) under the following conditions: 
 
* (F) has the primary modelling responsibility of (A).
* The `Status` attribute of (A) is `Active`.
* (A) is not divided, i.e. the `DividedEntities` attribute of (A) is empty.
* The  `OrganizationElement` attribute of (A) refers to an existing NETN-ORG `Unit` object (U).
* (U) has one or more subunits.


 
```mermaid 
sequenceDiagram 
autonumber
 
R-&gt;&gt;F: Disaggregate(A) 
F-&gt;&gt;Federation: (A).Status = Inactive
loop 
F-&gt;&gt;Federation: register(a+)
F-&gt;&gt;Federation: (a+).ParentUnit = (A)
F-&gt;&gt;Federation: (a+).Status = Active
end 
F-&gt;&gt;Federation: (A).DisaggregatedEntities=(a+)
F-&gt;&gt;R: SMC_Response 
 
``` 

|Step|Description|
|---|---|
|1| Request federate (R) sends a `Disaggregate` action to (A). (F) has the primary modelling responsibility of (A) and processes the action.|
|2| (F) updates the `Status` attribute of (A) to `Inactive`.|
|3| If the `OrganizationElement` attribute of (A) references a NETN-ORG `Unit` (U), then instances of `AggregateEntity` (a+) are registered for each NETN-ORG `Unit` (u+) where the (u+) attribute `SuperiorUnit` refers to (U). |
|4|(F) updates the initial attribute values for (a+), including the `ParentUnit` attribute set to refer to (A). |
|5|(F) updates the `Status` attributes of (a+) to `Active`. |
|6|(F) updates the `DisaggregatedEntities` attribute of (A) to reference (a+)|
|7|(F) sends a `SMC_Response` to (R) with the `Status` parameter set to `Success`|

 
After performing disaggregation, the following is true: 
 
* (A).Status = Inactive
* (a+) exists for all subunits of (U). 
* (a+).`OrganizationElement` refers to the corresponding (u+)
* (a+).Status = Active
* (a+).`ParentAggregate` = (A)
* (A).`DisaggregsatedEntities` = (a+) 
 
If a (u+), i.e, subunit, has one or more associated NETN-ORG `Equipment` objects (e+), then these are represented in the federation as `PhysicalEntity` objects (p+). After disaggregation, the following is true:

* (p+).`OrganizationElement` refers to the corresponding (e+)
* (p+).`Status` = Active
* (p+).`ParentAggregate` = (A)



 
Disaggregation always constitutes a complete disaggregation of all subunits and associated equipment into active `AggregateEntity` or `PhysicalEntity` objects. The disaggregated `AggregateEntity` remains registered as `Inactive` in the federation. 
 
 
## Aggregation 
 
Aggregation of a simulated `AggregateEntity` always constitutes a complete aggregation of all entities referenced by the `DisaggregatedEnties` attribute. 
 
A federate application (F) can perform aggregation of an `AggregateEntity` (A) under the following conditions: 
 
* (F) has the primary modelling responsibility of (A).
* The Status attribute of (A) is `Inactive`.
* The `DisaggregatedEntities` attribute of (A) references all disaggregated entities (a+).
* (a+).`DisaggregatedEntities` is empty, i.e. none of the disaggregated entities is further disaggregated.
* (a+).`DividedEntities` is empty, i.e. none of the disaggregated entities is divided.

 
 
```mermaid 
sequenceDiagram 
autonumber
 
R-&gt;&gt;F: Aggregate(A) 
loop a in (A).DisaggregatedEntities
F-&gt;&gt;Federation: delete(a)
end 
F-&gt;&gt;Federation: A.DisaggregatedEntities=Empty 
F-&gt;&gt;Federation: A.Status=Active 

F-&gt;&gt;R: SMC_Response 
 
``` 

 

|Step|Description|
|---|---|
|1| Request federate (R) sends an `Aggregate` action to (A). (F) has the primary modelling responsibility of (A) and processes the action.|
|2| (F) deletes all (A).`DisaggregatedEntities` |
|3| (F) updates (A).`DisaggregatedEntities` = `Empty`. |
|4| (F) updates (A).`Status` = `Active`. |
|5| (F) sends a `SMC_Response` to (R) with the `Status` parameter set to `Success` |




## Division 
 
Division of an `AggregateEntity` temporarily allocates some specific resources to another `AggregateEntity` or into one or more `Platform` and `Lifeform` objects. 
 
A federate application (F) can perform the division of an `AggregateEntity` (A) under the following conditions: 

* (F) has the primary modelling responsibility of (A).
* The `Status` attribute of (A) is `Active`. 
* The `AggregateEntity` is not disaggregated, i.e. the (A).`DisaggregatedEntities` attribute must be empty. 

 
 
```mermaid 
sequenceDiagram 
autonumber
 
R-&gt;&gt;F: Divide(A, r+, physical?) 
 
F-&gt;&gt;Federation: Register(A+ or P+) 
F-&gt;&gt;Federation: Update A with r- 
F-&gt;&gt;Federation: Update A+ or P+ with r+ 
F-&gt;&gt;Federation: Update A.DividedEntities = A+ or P+
F-&gt;&gt;Federation: Update A+ or P+ attribute `SourceAggregate` = (A).
 
F-&gt;&gt;R: SMC_Response 
 
``` 

|Step|Description|
|---|---|
|1| Request federate (R) sends a `Divide` action to (A). (F) has the primary modelling responsibility of (A) and processes the action. The action includes a list of resources to divide (r+) and an indication if the result should be a new `AggregateEntity` (A+) holding the divided resources or individual `PhysicalEntity` objects representing equipment or personnel (P+).|
|2| (F) registers A+ or P+|
|3| (F) updates A with the reduced holdings (r-)|
|4| (F) updates A+ or P+ with the divided holdings (r+)|
|5| (F) updates A.`DividedEntities` to reference A+ or P+|
|6| (F) updates A+ or P+ attribute `SourceAggregate` to refer to (A).
|7| (F) sends a `SMC_Response` to (R) with the `Status` parameter set to `Success` |


After performing division, the following is true:

* (A+) or (P+) exists with `SourceAggregate` attribute referencing (A)
* (A).`DividedEntities` references (A+) or (P+)

 
## Merging 

A federate application (F) can perform merging of an `AggregateEntity` (A) with one of its divided entities under the following conditions:
 
* (F) has the primary modelling responsibility of (A).
* The `Status` attribute of (A) is `Active`. 
* The `AggregateEntity` has been divided, i.e. the (A).`DividedEntities` must contain at least one element. 
 
 
```mermaid 
sequenceDiagram 
autonumber
 
R-&gt;&gt;F: Merge(A, d+) 
F-&gt;&gt;Federation: delete(d+) 

F-&gt;&gt;Federation: update(A.DividedEntities)

F-&gt;&gt;R: SMC_Response 
 
``` 
|Step|Description|
|---|---|
|1| Request federate (R) sends a `Merge` action indicating that the `AggregateEntity` (A) and the divided entities (d+) should merge. (F) has the primary modelling responsibility of (A) and processes the action. |
|2| (F) deletes all divided entities (d+) from the federation. |
|3| (F) updates (A).`DividedEntities` to exclude (d+) |
|4| (F) sends a `SMC_Response` to (R) with the `Status` parameter set to `Success` |

 
After merging, (A) represents all previously divided entities  (d+).</semantics>
        </note>
    </notes>
</objectModel>
