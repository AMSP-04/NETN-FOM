<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<objectModel xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/1516.2-2010/IEEE1516-DIF-2010.xsd" xmlns="http://standards.ieee.org/IEEE1516-2010" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelIdentification notes="netn-etr_1">
        <name>NETN-ETR</name>
        <type>FOM</type>
        <version>3.0 </version>
        <modificationDate>2023-06-28</modificationDate>
        <securityClassification>Not Classified</securityClassification>
        <purpose>The NETN-ETR FOM module provides a standard interface for sending tasks to simulated entities represented in a federated distributed simulation. NETN-ETR contains low-level tasks that can easily be interpreted and executed by simulators that model the behaviour of entities. It also defines a set of reports to provide status information, including the status of task execution.</purpose>
        <applicationDomain>Training</applicationDomain>
        <description>The NATO Education and Training Network (NETN) Entity Tasking and Reports (ETR) Module specifies how to represent simulation task requests provided to participants in a federated distributed simulation and simulator reports sent during the execution of tasks. 
        
The specification is based on IEEE 1516 High Level Architecture (HLA) Object Model Template (OMT) and supports interoperability in a federated simulation (federation) based on HLA.
        </description>
        <useLimitation>The NETN-ETR module focuses on tasking simulated entities: 
    
* It enables the transformation of command and control messages into tasks that a simulator can execute. 
* It defines a comprehensive set of tasks and reports that simulators can easily interpret and execute.
* It reflects the capabilities commonly found in COTS Computer Generated Forces (CGF) applications but is independent of a specific CGF, agent framework, or agent modelling paradigm. 
* It is independent of any specific doctrine or tactics. 

A tasked entity can be either a physical entity (e.g. platform or lifeform) or an aggregate entity. The task definition itself does not specify how a simulation models the execution of the task.</useLimitation>
        <useHistory notes="netn-etr_4">v1.1 - NETN-LBML. Developed by MSG-106 and MSG-134 for NETN FOM v2.0.</useHistory>
        <useHistory notes="netn-etr_3">v2.0 - Renamed and updated by MSG-163 for NETN FOM v3.0</useHistory>
        <useHistory notes="netn-etr_2">v3.0 - Updated by MSG-191 for NETN FOM v4.0</useHistory>
        <poc>
            <pocType>Release authority</pocType>
            <pocName>NATO Modelling and Simulation Group</pocName>
            <pocOrg>NATO Science and Technology Organization</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-106 Enhanced CAX Architecture, Desing and Methodology</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-134 NATO Distributed Simulation Architecture &amp; Design, Compliance Testing and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-163 Evolution of NATO Standards for Federated Simulation</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-191 NATO Standards for Federated Simulation and Services for Integration, Verification and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <reference>
            <type>Dependency</type>
            <identification>NETN-BASE</identification>
        </reference>
        <other>
Copyright Â© 2020 by NATO/OTAN. All rights reserved.
This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.

Above license gives you the right to use and redistribute this FOM Module (XML file and Documentation) in its entirety without modification. You are also allowed to develop your own new FOM Modules (in separate XML files and separate documentation) that build-on/extends this FOM module by reference. You are NOT allowed to modify this FOM Module or its documentation without prior permission by the NATO Modelling and Simulation Group.</other>
        <glyph type="png" height="48" width="48" alt="">iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABcSAAAXEgFnn9JSAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAKkElEQVRoBeVYeWxWWRV/X0sLpYR9K4V2oCwBBFoKQ9hSwhoSkiLLHzNm/mEGRAwRMSgJu0gEUyRmIpGwRs1IoAFEdgkQYFpZZNGUxcI0QFlLoU2h0G9519/vfO+8ef369WsR0Jl4kt+795577rnnnLs/y/o/Jh98j/+2+k/D6QCJqeaF8U3/xHkMTPfkvxVOqPGdYPjvgBrgB44T3lEhS0dGU0fsf5fofJ8AE54CxoNZjlkJSIloo0FeEwcaCBT/e8TOSVMBGh8A/E6e5Y+BSGoKBhGNGBANSrT6OjxjTB3Ho0WqTkOHwcY20Ar4O5DhlG2fz9cEyunMspYtWyYmJSV92LRp0xS/35+MOishIeHl69ev79fU1BRVVlYWQO5LoAIgMTDUS9RLNB667JUrV8atWLHCIM+gxSQ6F+mxOrwTdVSgIxDq2LGj6dGjh4ED5EcF6yjTuXPnryDzK+ADQKne0dDII22mwsiLLWqQ8jUlXz3UqcMI0aEg8Aki8Hsosdu0aeNr27at7/bt26wXw9PS0qypU6f6MBJWXFycVVVVZe3fv9/cvXuX9dTn69mzp1VeXl7x/PnzPJR/CbA966jfJfSRgL4CSIe/ePHijy1atFiK8p9OnjzZZMyYMSFXMEqGTiRG8NWZ0eAbGEqDxPDRo0ebrVu3mitXrpinT5+aR48emTVr1pgNGzYYGCq8y5cvm+3bt9ujRo2ikVxDJj09nTpOAWkASfuwaDwZSLOLi4vL5s6day5cuEBnZpAPijoAqmABBL4Cfg3kAl0A0mCgJCMjgx2HOnToYPbs2WMQSej9mk6dOsV6AZ3yEmX37dtnkpOT6Ygfo0G5UmAgQOKaUuM/xOg+mzJlCmWq2d/FixepTp2QBvrReZgCRhngGoH8QyAfKFXjZ8+ebe7du+faZtu2CQQYIGOOHDnitj137pzwWBcKhSTPD6cUowqdNY7OB8j3BIQgkg3jyydPnkwZ/8iRI5m+BszDhw9rUN9dBJ0Ph0OH5AsKAa8ADnXIWfXG6SiwatUqU11dTTvEKBpGB9TAY8eOsb3g0qVLrpxk8AkGg5J99eqVWb58OeVquMD79u37D+Q5bbIwbSonTpzIOv+gQYOYcsQM5j/bLkK+FqnxZG4A2IDzW40Pdu/enbtOaMGCBQbbIpW4hkgBH3Xg6NGjbC9QByhz4sQJU1JSwqzBNispdS1cuNA1cMeOHXtKS0tvaeQHDhzo1p0+fZptfgbdUcnrxBpIqBGyTbI8YsQI8+TJE+lYoygF56MOeKfQ1atXpfbgwYOib9KkSQYGCk+d4MKn/iVLloSKioqMY3zAG/kzZ86wzU8cy33IR27zUuVl/pxKCewWsttwcZKiGU9+NAcwFUxBQYHoycrKknT8+PHmwYMHbOKuG8qdPXvWTJ8+nVMlFCPy9RovHuBDJ3Q0ftGtWzd2GpwzZ4477Jzv0UgdOHz4sBiKdoaG0djs7GzhDRkyRNIJEybU2gQ4Ktjbpc5rPJ0CNRh59CVGcyciksjANeD7jgMBLkySGimFiI/WeR24du2aSN25c0emINSaoUOHiqFjx46VM4M7kp7iAwYMYB0PKePM+Z8iT2ow8mExz7d9+/Z/RdF06dIloEOuRkbYLkWtO3TokBjIthwBpfv377tODB48WGTGjRtnhg0bJvl+/fox5XS1nd2mUZGHvEvpyH0X4F3ly9TUVDkx582bZ+uCq2/60Eh1wLuNRu46PDtwGovBmZmZkqIv06tXL80Hjx8/zh3rNvhy/4FqPaPAqk26aHlt2AtUA6rIYOtk3s7Ly9Mg1puqY9zbFy9e7OpYvXq1e2bo4udIaNT79+/PEXblMf1CvDuh3wrcanshJTXoQAsI6enr5wUK5UDv3r1l99m1a5cYrhGO5oXW6TWCVwTcPMUwZy7L7qVyHAneodCP6dOnj6Rse/78eemzdevWNhZ8FuqtmTNnRnVAo08ZKqhkBsQFxLomcER2o2bN3Jss62MSLm9Sj/VjEaQbN25IGh8ftgNOWF27drV27txpDR8+3Lp586aFdWPl5ORYcExkcUX34d4jNu7evVt40T7qRDIqHwMSCefqEMTVQaLBmyZJp0msEeCiVT1MO3XqJOWNGzcaXK2lKUdB7023bt0yusOxEn3JDoSzh2/u7wCkqCPACt3vmfK5+FvgHFAFuFfmZcuWRbO5Dk8d5NUZp6rhtYN6FDNmzDAYDbedrgllsP3SpUvlzoO70SO0SwVIGuhwqYEvhTOAj1JSUjieZtq0aSGNnhqpncZKKcvrNE9e6lHk5+e7I0An1BH2kZubKzsfzp8LkNfIa6DBqp/4FqjlaatWrfKaN2/Ojv28o5B0ETZkuLf+2bNnZu3ata4D0GcWLVrkXifUAR56qAvwiYpDlL9uSLSpUQ6IND7cUkmtgbPOVhrctGmT2NTYEaAc4XWYt1EExXWEr7rr16+7vm7evFkOMeeRwylN0kdWuNTAV4X596EQMHj3ypzEnsyHhHTmNcrtPUbGK88rxfz5810ntmzZIi15NiDy0hf6LEbf3FhItWZFmBX9q/OtA6r564S/L+TPg/OQMevXr3fNbOxIaAPvaPBU37t3r+grKysTkXXr1tEpvzPi+mDRgEa32MNVL/nb8J+AKGMKJ0LYv4M4lCQ6zh1FpsabOkFLvaOhzjmHnx9XF4M/GdfRLw9WktoVLsX4qmBnyPBtSgf4pBSjWcawksc92taHujeqakxjUi5adYQvNu0Hv2iYnwiQGh39sPjXDT4Bg4pcYBQ4pY5hW1WezUeKEo0hYo2IOquGs21hYSH1yWHp6F6BMkmnc7jUyK93q+LZfQb4ETAUkN8cSD93Ll5yWm7bts1UVFSoH5J6Da3PMfxiNFy80EeEHJ2/QV7Ja4vyGpVqQ91KazXC/YUPnWLccQz+0cj04huX793Hjx83OAJ8Tx84cEDfvKZdu3ZB6oLOq56OGh19NdbTVrLkUymJ85B5rhGekJmYToUIdbPExEQbiy6upKQEbCsE58ysWbPi8ByMg2EWXljkW4i2hYPMwuPexh8HG5c16o/HbmPhkRTCT9946CyHzmzw77AO4Ai/FbETQkkX1I/BoENy3CO1uXc7Bw/5hMxpJ1+HR1nd7x1ZmY7Ifw8gaV/hUoyv18AYYq4jNGYfkAtw+jBy/AlFPX+BUQm4duQgn8R9/uXLl6IfvxANRguivio8dgrw35S/KQegzL9bNJbB4BrbCnwGcLQZhHdGOifToPE5QEd4wOkobENeif8sDc4Ng5PbBoLMg3cT6O0IuQclyl49/0KZ1xeSbuvh0lt+1YG+0MMrLg1S/CFCNw+gu049R0md3OLIqS6+dIocOd77VV9mhJxTfPtEp1sqVH0OsMN8j1pOBY3an516RlfXw6eOLKeKbsnUdQ2grr8BkwDVgey7J3WCmocAetxrVHXx8d8ljdIfBEzdX+fIk9QJjuoPAW3LuvdKNNYbJW9ejciBDB1QcG6rwd4gqOOoFtL2Wm4wjVTQYAMIqFHalmUlzVeAwXnN6wfxBXAFoPEqg6zkGQDqIv+d7jzQ9x+RN8JeBfXxvTJvnH8vSmEF9Xqn1jcmum8coffd4N+JGjk80q6rSgAAAABJRU5ErkJggg==</glyph>
    </modelIdentification>
    <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
            <objectClass>
                <name>BaseEntity</name>
                <sharing>Subscribe</sharing>
                <semantics>A base class of aggregate and discrete scenario domain participants. The BaseEntity class is characterized by being located at a particular location in space and independently movable, if capable of movement at all. It specifically excludes elements normally considered to be a component of another element. The BaseEntity class is intended to be a container for common attributes for entities of this type. Since it lacks sufficient class specific attributes that are required for simulation purposes, federates cannot publish objects of this class. Certain simulation management federates, e.g. viewers, may subscribe to this class. Simulation federates will normally subscribe to one of the subclasses, to gain the extra information required to properly simulate the entity.</semantics>
                <attribute>
                    <name>SupportedTasks</name>
                    <dataType>ArrayOfTaskTypes</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional: Tasks supported by this entity.</semantics>
                </attribute>
                <attribute>
                    <name>TaskProgress</name>
                    <dataType>ArrayOfTaskProgress</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. An array of progress for current tasks.</semantics>
                </attribute>
                <attribute>
                    <name>CurrentTasks</name>
                    <dataType>ArrayOfTaskDefinitions</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. An array of currently executing tasks.</semantics>
                </attribute>
                <attribute>
                    <name>PlannedTasks</name>
                    <dataType>ArrayOfTaskDefinitions</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. An array of all planned tasks.</semantics>
                </attribute>
                <attribute>
                    <name>PreviousTasks</name>
                    <dataType>ArrayOfTaskDefinitions</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. An array of completed or cancelled tasks.</semantics>
                </attribute>
                <attribute>
                    <name>CaptureStatus</name>
                    <dataType>CaptureStatusEnum8</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional: The status of an entity's level of control or influence over its activities. The default is Not-Captured.</semantics>
                </attribute>
            </objectClass>
            <objectClass>
                <name>ETR_DelegatedTask</name>
                <sharing>PublishSubscribe</sharing>
                <semantics>Object to represent a task and its execution progress when delegated to a federate application other than the one responsible for the tasked entity.</semantics>
                <attribute>
                    <name>TaskDefinition</name>
                    <dataType>TaskDefinition</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Required. Definition description of the task represented.</semantics>
                </attribute>
                <attribute>
                    <name>TaskProgress</name>
                    <dataType>TaskProgress</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Required. Progress description of the task represented.</semantics>
                </attribute>
            </objectClass>
        </objectClass>
    </objects>
    <interactions>
        <interactionClass>
            <name>HLAinteractionRoot</name>
            <interactionClass>
                <name>ETR_SimCon</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>Simulation control interactions instruct a simulation model to change a specific state directly. Although the simulation control interactions are not tasks performed by the simulation model, they are a direct change of model state if accepted by a federate application.</semantics>
                <parameter>
                    <name>SimulatedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>Required. Reference to the entity that is the subject of simulation control.</semantics>
                </parameter>
                <interactionClass>
                    <name>MagicMove</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs the simulation entity to immediately change location to the specified position and heading.</semantics>
                    <parameter>
                        <name>Location</name>
                        <dataType>LocationStruct</dataType>
                        <semantics>Required. Location of the entity.</semantics>
                    </parameter>
                    <parameter>
                        <name>Heading</name>
                        <dataType>DirectionDegreesFloat32</dataType>
                        <semantics>Optional. Heading of the entity. [0,360). Default = 0. True North.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>RequestCurrentSensorDetections</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Requests the resending of all current `SensorReports`.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>SetRulesOfEngagement</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs the simulation entity to change its rules of engagement immediately.</semantics>
                    <parameter>
                        <name>RulesOfEngagement</name>
                        <dataType>RulesOfEngagementEnum8</dataType>
                        <semantics>Required. The rules of engagement for an entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>Response</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A response from the receiving federate indicating ability to comply with a request.</semantics>
                    <parameter>
                        <name>Request</name>
                        <dataType>UUID</dataType>
                        <semantics>Required: Reference to the request this interaction is a response to.</semantics>
                    </parameter>
                    <parameter>
                        <name>Status</name>
                        <dataType>HLAboolean</dataType>
                        <semantics>Required. Specifies the result of the request action. TRUE indicates success.</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
            <interactionClass>
                <name>ETR_Task</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>Base interaction class related to the tasking of simulated entities and task management.</semantics>
                <parameter>
                    <name>TaskedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>Required. Reference to the entity that should execute the task.</semantics>
                </parameter>
                <interactionClass>
                    <name>RequestTask</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Requests a simulated entity to perform some task based on a task description. If accepted, the federate application modelling the behaviour will execute the task per task parameters and scheduling. A request task is acknowledged using a `TaskStatusUpdate` response interaction. Resending a `RequestTask` with the same `TaskId` as a previously sent interaction is equivalent to cancelling and sending a new task.</semantics>
                    <parameter>
                        <name>TaskId</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Unique identifier for the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>StartTime</name>
                        <dataType>EpochTime</dataType>
                        <semantics>Optional. The default value is the current `ScenarioTime`.</semantics>
                    </parameter>
                    <parameter>
                        <name>Activity</name>
                        <dataType>AggregateMissionEnum16</dataType>
                        <semantics>Optional. Specifies the activity for the entity that will execute the task. The default value is zero (0).</semantics>
                    </parameter>
                    <parameter>
                        <name>Annotation</name>
                        <dataType>HLAunicodeString</dataType>
                        <semantics>Optional. A general text describing information about this task. The annotation may, e.g. include the reason for the task and text describing the names of referenced entities.</semantics>
                    </parameter>
                    <parameter>
                        <name>MainTask</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Provided to indicate that this task is a subtask related to a main task.</semantics>
                    </parameter>
                    <parameter>
                        <name>PreviousTask</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Provided to indicate that the task will execute after the referenced task.</semantics>
                    </parameter>
                    <parameter>
                        <name>NextTask</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Provided to indicate that the task will execute before the referenced task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Tasker</name>
                        <dataType>UUID</dataType>
                        <semantics>Optional. Reference to the commander of the task. If missing, the commander is undefined.</semantics>
                    </parameter>
                    <parameter>
                        <name>TaskMode</name>
                        <dataType>TaskModeEnum8</dataType>
                        <semantics>Optional. Determines the task mode. Default NonConcurrentMode</semantics>
                    </parameter>
                    <interactionClass>
                        <name>OtherActivity</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to wait for a duration of time. TaskTypeEnum=42</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>OtherActivityTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>DirectFire</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking an entity to fire directed at a specified target entity. TaskTypeEnum = 20</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>DirectFireTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>IndirectFire</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking an entity to fire directed at an area. TaskTypeEnum=22</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>IndirectFireTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>OperateCheckpoint</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Request an entity to operate a checkpoint. The tasked entity should be within the radius of the checkpoint object. If not, a separate move task should be issued first. The tasked entity activates an inactive checkpoint and operates the checkpoint for the specified duration. TaskTypeEnum=32</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>OperateCheckpointTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Observe</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to observe an area. TaskTypeEnum=31</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>ObserveTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveToLocation</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Request a simulated entity to move to a specified destination location. The entity aligns with the path from its current position to the nearest position or waypoint on the path. The entity leaves the path at a position or waypoint on the path closest to the destination. TaskTypeEnum=28</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>MoveToLocationTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveIntoFormation</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking a simulated entity to move into the given formation on the given location with the given heading. TaskTypeEnum=26</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>MoveIntoFormationTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveInDirection</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to move in a specified direction for a duration. TaskTypeEnum=25</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>MoveInDirectionTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>FollowEntity</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to follow another entity at a specified distance. TaskTypeEnum=24</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>FollowEntityTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Mount</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to mount the specified entity. The tasked entity should be within a certain distance (tolerance specified in the federation agreements) of the entity's location to mount. TaskTypeEnum=30</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>AttachTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Dismount</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to dismount from a mounted position. TaskTypeEnum=18</semantics>
                    </interactionClass>
                    <interactionClass>
                        <name>MoveByRoute</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to move given the specified route with a given speed for reaching each waypoint. The entity should align with the path from its current position to the first waypoint on the path using the speed set for the first waypoint in the route. When reaching the last waypoint, the speed is zero (0), and movement stops.</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>MoveByRouteTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>ChangeSpeed</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to change speed. TaskTypeEnum=36</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>ChangeSpeedTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>ChangeAltitude</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to set move to a specified altitude. TaskTypeEnum=35</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>ChangeAltitudeTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>ChangeHeading</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Tasking of an entity to change heading. TaskTypeEnum=40</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>ChangeHeadingTaskStruct</dataType>
                            <semantics>Required: Task parameters.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>Patrol</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to perform a patrol task. The tasked entity moves from its current position to the start of the patrol route and then moves according to the patrol route from its start point in the path through all waypoints. TaskTypeEnum=33</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>PatrolTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>StopAtSideOfRoad</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to stop at the side of the road. This task is only relevant for an entity moving along a road. The current move task is cancelled, and a new move task executes to a position at the side of the road (the simulator has to calculate this location). TaskTypeEnum=39</semantics>
                    </interactionClass>
                    <interactionClass>
                        <name>OperateObservationPost</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requests an entity to operate an observation post. The tasked unit should be within in a given radius from the observation post. If not, a separate move task should be issued first. The tasked unit activates an inactive observation post and operates it for the specified duration. TaskTypeEnum=34</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>OperateObservationPostTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>EnterFacility</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Requesting a simulated entity to enter the specified facility (cultural feature). The tasked entity should be within a certain distance (tolerance specified in the federation agreements) of the facility location to enter. TaskTypeEnum=21</semantics>
                        <parameter>
                            <name>TaskParameters</name>
                            <dataType>AttachTaskStruct</dataType>
                            <semantics>Required: Task parameters</semantics>
                        </parameter>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>RequestCancelTask</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Request to cancel all one or more tasks.</semantics>
                    <parameter>
                        <name>Tasks</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Required. Tasks to cancel. If no specific tasks are indicated, the default is to cancel all scheduled and ongoing tasks for the simulation entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>RequestTaskStatus</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Requests the federate application modelling the tasked entity to send a `TaskStatusUpdate` interaction for the specified tasks.</semantics>
                    <parameter>
                        <name>Tasks</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Optional. Tasks for which status reports are requested. The default, if not provided or if the list of tasks is empty, the request refers to all tasks for the tasked entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>RequestTaskDelegation</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Request a specific federate application to execute a task. If the delegated task is accepted, a `DelegatedTask` object is created in the federation to track the progress of task execution.</semantics>
                    <parameter>
                        <name>RequestedFederateApplication</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Reference to the target federate application.</semantics>
                    </parameter>
                    <parameter>
                        <name>TaskDefinition</name>
                        <dataType>TaskDefinition</dataType>
                        <semantics>Required. Definition of the task.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>TaskStatusUpdate</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A management task report regarding the status of a specific task assigned to an entity. The inherited parameter `Time is required.`</semantics>
                    <parameter>
                        <name>Task</name>
                        <dataType>UUID</dataType>
                        <semantics>Required. Reference to the task associated with the report.</semantics>
                    </parameter>
                    <parameter>
                        <name>TaskStatus</name>
                        <dataType>TaskStatusEnum32</dataType>
                        <semantics>Required. The status of the task.</semantics>
                    </parameter>
                    <parameter>
                        <name>Comments</name>
                        <dataType>HLAunicodeString</dataType>
                        <semantics>Optional. Any additional comments, e.g. reason for cancelling, errors.</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
            <interactionClass>
                <name>ETR_Report</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>A base interaction class for more specialized report interaction classes. The inherited parameter `Time is required.`</semantics>
                <parameter>
                    <name>ReportId</name>
                    <dataType>UUID</dataType>
                    <semantics>Required: Unique identifier for the report.</semantics>
                </parameter>
                <parameter>
                    <name>ReportingEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>The entity sending the report.</semantics>
                </parameter>
                <parameter>
                    <name>Comments</name>
                    <dataType>HLAunicodeString</dataType>
                    <semantics>Optional. Any additional comments associated with the report.</semantics>
                </parameter>
                <interactionClass>
                    <name>SpotReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report on a unit's awareness of spotted entities.</semantics>
                    <parameter>
                        <name>IdentificationLevel</name>
                        <dataType>IdentificationLevelEnum8</dataType>
                        <semantics>Required. The identification level of spotted entities.</semantics>
                    </parameter>
                    <parameter>
                        <name>SpottedEntities</name>
                        <dataType>ArrayOfSpottedEntities</dataType>
                        <semantics>Required. Spotted entities at the time of the report.</semantics>
                    </parameter>
                    <parameter>
                        <name>SensorType</name>
                        <dataType>EntityTypeStruct</dataType>
                        <semantics>Optional: The type of sensor that is the primary source of the report.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>PositionStatusReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report on a unit's position, speed, and heading.</semantics>
                    <parameter>
                        <name>Position</name>
                        <dataType>LocationStruct</dataType>
                        <semantics>Required. Position of the entity at the specified time.</semantics>
                    </parameter>
                    <parameter>
                        <name>Heading</name>
                        <dataType>DirectionDegreesFloat32</dataType>
                        <semantics>Required. Heading of the entity. [0,360). Default = 0. True North.</semantics>
                    </parameter>
                    <parameter>
                        <name>Speed</name>
                        <dataType>VelocityMeterPerSecondFloat32</dataType>
                        <semantics>Required. Speed of the entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>DamageStatusReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report on a unit's damage status.</semantics>
                    <parameter>
                        <name>DamageType</name>
                        <dataType>DamageStatusEnhancedEnum32</dataType>
                        <semantics>Required. Damage state of the reported entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>ResourceStatusReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report on a unit's remaining amount of resources.</semantics>
                    <parameter>
                        <name>Resource</name>
                        <dataType>SupplyStatusStruct</dataType>
                        <semantics>Required. The type of resource and remaining quantity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>UnderAttackStatusReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report from a unit that it is under attack.</semantics>
                    <parameter>
                        <name>FromDirection</name>
                        <dataType>DirectionDegreesFloat32</dataType>
                        <semantics>Required. The direction to the attacking entity [0,360). Default = 0. True North.</semantics>
                    </parameter>
                    <parameter>
                        <name>Severeness</name>
                        <dataType>AttackTypeEnum32</dataType>
                        <semantics>Required. Severeness of the attack upon the reporting entity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>InWeaponRangeReport</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Report on a unit's ability to reach specific targets with its weapon systems.</semantics>
                    <parameter>
                        <name>WeaponType</name>
                        <dataType>EntityTypeStruct</dataType>
                        <semantics>Required. The type of weapon that is in range.</semantics>
                    </parameter>
                    <parameter>
                        <name>EntitiesInWeaponRange</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Required. Reference to entities in weapon range.</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
        </interactionClass>
    </interactions>
    <dataTypes>
        <enumeratedDataTypes>
            <enumeratedData>
                <name>RulesOfEngagementEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>Rules of engagement for a simulated entity.</semantics>
                <enumerator>
                    <name>HoldFire</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>FireAtWill</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>FireWhenFiredUpon</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskStatusEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>The status of a task.</semantics>
                <enumerator>
                    <name>Accepted</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Refused</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Cancelled</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Executing</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>Completed</name>
                    <value>4</value>
                </enumerator>
                <enumerator>
                    <name>Error</name>
                    <value>5</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>IdentificationLevelEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>The identification level of an object.</semantics>
                <enumerator>
                    <name>Lost</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Detected</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Classified</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Identified</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>FullKnowledge</name>
                    <value>4</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>MoveTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>CrossCountry: move directly to the destination without considering the roads. 
OnlyRoads: stay on the roads to get to the closest point to the destination that is still on the road; if there is no road very near to the start (within around 10 meters), there will be no movement. 
RoadsAndCrossCountry: move to the destination by considering the roads; it is allowed to go off the road.</semantics>
                <enumerator>
                    <name>CrossCountry</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>OnlyRoads</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>RoadsAndCrossCountry</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>AttackTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>The kind of attack by the enemy.</semantics>
                <enumerator>
                    <name>None</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Artillery</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>HeavyArtillery</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Other</name>
                    <value>3</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskModeEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>Specifies if task execution is in non-concurrent or concurrent mode.</semantics>
                <enumerator>
                    <name>NonConcurrentMode</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>ConcurrentMode</name>
                    <value>1</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>PatrolTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Other - The behaviour is federate application specific (e.g. wait for the next command). Circle - At the end of the route, move to the start point of the patrol route (the federate application determines the route). Reverse - Follow the patrol route in reverse order.</semantics>
                <enumerator>
                    <name>Other</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Circle</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Reverse</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>PatrolMoveTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Defines the movement during the execution of the patrol.</semantics>
                <enumerator>
                    <name>Other</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>Stealth</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Caution</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Open</name>
                    <value>3</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>CaptureStatusEnum8</name>
                <representation>HLAoctet</representation>
                <semantics>The status of a simulated entity concerning their control or influence over their activities.</semantics>
                <enumerator>
                    <name>Not-Captured</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Captured</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>AttemptingSurrender</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>Other</name>
                    <value>0</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TaskTypeEnum</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Task types.</semantics>
                <enumerator>
                    <name>MagicMove</name>
                    <value>10</value>
                </enumerator>
                <enumerator>
                    <name>MagicResource</name>
                    <value>11</value>
                </enumerator>
                <enumerator>
                    <name>Dismount</name>
                    <value>18</value>
                </enumerator>
                <enumerator>
                    <name>DirectFire</name>
                    <value>20</value>
                </enumerator>
                <enumerator>
                    <name>IndirectFire</name>
                    <value>22</value>
                </enumerator>
                <enumerator>
                    <name>FollowEntity</name>
                    <value>24</value>
                </enumerator>
                <enumerator>
                    <name>MoveInDirection</name>
                    <value>25</value>
                </enumerator>
                <enumerator>
                    <name>MoveIntoFormation</name>
                    <value>26</value>
                </enumerator>
                <enumerator>
                    <name>MoveToEntity</name>
                    <value>27</value>
                </enumerator>
                <enumerator>
                    <name>MoveToLocation</name>
                    <value>28</value>
                </enumerator>
                <enumerator>
                    <name>Mount</name>
                    <value>30</value>
                </enumerator>
                <enumerator>
                    <name>Observe</name>
                    <value>31</value>
                </enumerator>
                <enumerator>
                    <name>OperateCheckpoint</name>
                    <value>32</value>
                </enumerator>
                <enumerator>
                    <name>Patrol</name>
                    <value>33</value>
                </enumerator>
                <enumerator>
                    <name>ChangeAltitude</name>
                    <value>35</value>
                </enumerator>
                <enumerator>
                    <name>ChangeSpeed</name>
                    <value>36</value>
                </enumerator>
                <enumerator>
                    <name>StopAtSideOfRoad</name>
                    <value>39</value>
                </enumerator>
                <enumerator>
                    <name>ChangeHeading</name>
                    <value>40</value>
                </enumerator>
                <enumerator>
                    <name>OtherActivity</name>
                    <value>42</value>
                </enumerator>
                <enumerator>
                    <name>TaskStatusReport</name>
                    <value>49</value>
                </enumerator>
                <enumerator>
                    <name>MoveByRoute</name>
                    <value>29</value>
                </enumerator>
                <enumerator>
                    <name>OperateObservationPost</name>
                    <value>34</value>
                </enumerator>
                <enumerator>
                    <name>EnterFacility</name>
                    <value>21</value>
                </enumerator>
            </enumeratedData>
        </enumeratedDataTypes>
        <arrayDataTypes>
            <arrayData>
                <name>ArrayOfSpottedEntities</name>
                <dataType>SpottedEntity</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>The spotted entities at a specific time</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfSpottedEquipment</name>
                <dataType>SpottedEquipment</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>An array with spotted equipment at the spotted entity.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskTypes</name>
                <dataType>TaskTypeEnum</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>A set of types of tasks.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskDefinitions</name>
                <dataType>TaskDefinition</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array containing task definitions.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfTaskProgress</name>
                <dataType>TaskProgress</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array of task progress types.</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfWaypoints</name>
                <dataType>Waypoint</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>Array of waypoints with location and the speed to the waypoint.</semantics>
            </arrayData>
        </arrayDataTypes>
        <fixedRecordDataTypes>
            <fixedRecordData>
                <name>SpottedEntity</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Descripton of the observed entity. 
The symbol contains information about the spotted entity's relation to the spotter and details about the type and echelon of the spotted entity.</semantics>
                <field>
                    <name>SpottedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>The unique identifier for the entity</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>LocationStruct</dataType>
                    <semantics>The location where the entity were spotted</semantics>
                </field>
                <field>
                    <name>Heading</name>
                    <dataType>DirectionDegreesFloat32</dataType>
                    <semantics>Heading of spotted entity.</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>The speed of the entity (m/s). 
 
Default value: 0 m/s</semantics>
                </field>
                <field>
                    <name>Equipment</name>
                    <dataType>ArrayOfSpottedEquipment</dataType>
                    <semantics>Spotted equipment list, type and number. 
 
Default value: Empty array.</semantics>
                </field>
                <field>
                    <name>Activity</name>
                    <dataType>AggregateMissionEnum16</dataType>
                    <semantics>The current activity of the entity. (Fromm NETN-Base) 
Default value: Moving (213)</semantics>
                </field>
                <field>
                    <name>Symbol</name>
                    <dataType>SymbolIdentifier</dataType>
                    <semantics>Symbol identifier for the entity. The detailed level may vary and the publishing federate decides the level of details in the symbol description. E.g. 
Default Ground value: app6b:SUGP------***** 
Default Air value: app6b:SUAP------***** 
Default Sea Surface value: app6b:SUSP------***** 
Default Subsurface value: app6b:SUUP------*****</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>SpottedEquipment</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Equipment at the spotted entity.</semantics>
                <field>
                    <name>Type</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Use entity types from Supply Types, Expendibles or Sensors/Emitters tables  (SISO-REF-010-2010, 4.3), 
for aggregate entities, also use entity types from platform tables to describe the equipment type.</semantics>
                </field>
                <field>
                    <name>NumberOfEquipment</name>
                    <dataType>QuantityInt32</dataType>
                    <semantics>The number of the equipment.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FollowEntityTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for FollowEntity</semantics>
                <field>
                    <name>FollowedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to follow.</semantics>
                </field>
                <field>
                    <name>Behind</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters behind the entity to follow.</semantics>
                </field>
                <field>
                    <name>Right</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters to the right of the entity to follow.</semantics>
                </field>
                <field>
                    <name>Above</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The distance in meters above the entity to follow.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the follow action (Milliseconds).</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>TaskDefinition</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Fixed record to describe the definition of a task.</semantics>
                <field>
                    <name>TaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier for the task.</semantics>
                </field>
                <field>
                    <name>TaskedEntity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to who is executing the task.</semantics>
                </field>
                <field>
                    <name>Tasker</name>
                    <dataType>Callsign</dataType>
                    <semantics>Callsign of the commander of the task.</semantics>
                </field>
                <field>
                    <name>StartTime</name>
                    <dataType>EpochTime</dataType>
                    <semantics>Timestamp of when the task should start.</semantics>
                </field>
                <field>
                    <name>Annotation</name>
                    <dataType>HLAunicodeString</dataType>
                    <semantics>A general text describing information about this task. The annotation may e.g. include the reason for the task and text describing names of referenced entities.</semantics>
                </field>
                <field>
                    <name>TaskMode</name>
                    <dataType>TaskModeEnum8</dataType>
                    <semantics>Determines the task mode.</semantics>
                </field>
                <field>
                    <name>Activity</name>
                    <dataType>AggregateMissionEnum16</dataType>
                    <semantics>Suggested activity for unit executing this task.</semantics>
                </field>
                <field>
                    <name>Status</name>
                    <dataType>TaskStatusEnum32</dataType>
                    <semantics>Current status of this task.</semantics>
                </field>
                <field>
                    <name>TaskParameters</name>
                    <dataType>TaskDefinitionVariantRecord</dataType>
                    <semantics>Task specific definition details.</semantics>
                </field>
                <field>
                    <name>MainTask</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the main task if this task is part of a complex task sequence. Equals TaskId if this task is the main task.</semantics>
                </field>
                <field>
                    <name>PreviousTask</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the previous task if this task is part of a complex task sequence. Null if this task is the first in the sequence.</semantics>
                </field>
                <field>
                    <name>NextTask</name>
                    <dataType>UUID</dataType>
                    <semantics>Unique identifier of the next task if this task is part of a complex task sequence. Null if this task is the last in the sequence.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>TaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Fixed record to describe the progress of an executing task.</semantics>
                <field>
                    <name>TaskId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the task this progress belongs to.</semantics>
                </field>
                <field>
                    <name>LastUpdated</name>
                    <dataType>EpochTime</dataType>
                    <semantics>When was this task last updated.</semantics>
                </field>
                <field>
                    <name>ExecutingFederateId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the federate that is executing this task.</semantics>
                </field>
                <field>
                    <name>ETC</name>
                    <dataType>EpochTime</dataType>
                    <semantics>Estimated time to completion.</semantics>
                </field>
                <field>
                    <name>ProgressData</name>
                    <dataType>TaskProgressVariantRecord</dataType>
                    <semantics>Variant record with task specific progress data.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToLocationTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for MoveToLocation task.</semantics>
                <field>
                    <name>Location</name>
                    <dataType>LocationStruct</dataType>
                    <semantics>Location to move to.</semantics>
                </field>
                <field>
                    <name>Path</name>
                    <dataType>LocationStructArray</dataType>
                    <semantics>Path to use in order to move to Location.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Initial speed of the entity.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for a Patrol task.</semantics>
                <field>
                    <name>Path</name>
                    <dataType>ArrayOfWaypoints</dataType>
                    <semantics>Specifies the route to patrol.</semantics>
                </field>
                <field>
                    <name>PatrolType</name>
                    <dataType>PatrolTypeEnum32</dataType>
                    <semantics>Defined how the patrol should be executed. The full movement from start point, through the patrol route and back to the start point is called one cycle.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>PatrolMoveTypeEnum32</dataType>
                    <semantics>Defines how the entity shall move during the patrol route.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the patrol task. The path will be patrolled minimum 1 time. When time has expired no patrol along the path will start.</semantics>
                </field>
                <field>
                    <name>IntervalTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The time between the start of two patrol cycles, i.e. the time to complete a cycle and any waiting time before starting the next cycle.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>DirectFireTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for direct fire.</semantics>
                <field>
                    <name>Target</name>
                    <dataType>UUID</dataType>
                    <semantics>Target to fire at.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Duration of the fire (milliseconds). Can be 0</semantics>
                </field>
                <field>
                    <name>Round</name>
                    <dataType>RoundStruct</dataType>
                    <semantics>Details regarding the weapon, munition, rounds and rate of fire.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>IndirectFireTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for IndirectFire task.</semantics>
                <field>
                    <name>Area</name>
                    <dataType>LocationStructArray</dataType>
                    <semantics>Area of where to fire.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>How long to fire for.</semantics>
                </field>
                <field>
                    <name>Round</name>
                    <dataType>RoundStruct</dataType>
                    <semantics>Details regarding the weapon, munition, rounds and rate of fire.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>Waypoint</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>A location and the speed to reach that location.</semantics>
                <field>
                    <name>Location</name>
                    <dataType>LocationStruct</dataType>
                    <semantics>Coordinate to move towards.</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Speed over ground for an entity, in m/s.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ChangeSpeedTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for ChangeSpeedTask task.</semantics>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Determines the ordered speed to set for an entity, in m/s.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ChangeAltitudeTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for ChangeAltitude</semantics>
                <field>
                    <name>Altitude</name>
                    <dataType>AltitudeMeterFloat64</dataType>
                    <semantics>Defines the altitude as relative to mean sea level (MSL). Positive if above MSL and negative if below.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>AttachTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for tasks related to attach or associate one entity with another, e.g. mount a platform, embark on a ship, or to enter a facility.</semantics>
                <field>
                    <name>EntityId</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to mount.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>OperateCheckpointTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for OperateCheckpoint task.</semantics>
                <field>
                    <name>CheckpointId</name>
                    <dataType>UUID</dataType>
                    <semantics>UniqueId of the checkpoint to operate.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>How long to operate the checkpoint for (Milliseconds).</semantics>
                </field>
                <field>
                    <name>DelayTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Updates the DelayTime for the checkpoint. If left blank the DelayTime will remain the same.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>OtherActivityTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for this task.</semantics>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Specifies the time (milliseconds in the scenario) to perform the activity.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveInDirectionTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Tasking of an entity to move in a specified direction for a given duration.</semantics>
                <field>
                    <name>Direction</name>
                    <dataType>DirectionDegreesFloat32</dataType>
                    <semantics>Direction of movement</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>Initial speed of the entity.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>The duration of the move.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveIntoFormationTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Initial movement speed.</semantics>
                <field>
                    <name>Formation</name>
                    <dataType>AggregateStateFormationEnum32</dataType>
                    <semantics>The type of positional arrangement the entity.</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>LocationStruct</dataType>
                    <semantics>The location to move to.</semantics>
                </field>
                <field>
                    <name>Distance</name>
                    <dataType>MeterFloat32</dataType>
                    <semantics>The minimum distance between entities in the formation.</semantics>
                </field>
                <field>
                    <name>Heading</name>
                    <dataType>DirectionDegreesFloat32</dataType>
                    <semantics>The heading of the formation.</semantics>
                </field>
                <field>
                    <name>Speed</name>
                    <dataType>VelocityMeterPerSecondFloat32</dataType>
                    <semantics>The initial speed of the entity.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveToEntityTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for MoveToEntity.</semantics>
                <field>
                    <name>Entity</name>
                    <dataType>UUID</dataType>
                    <semantics>Reference to the entity to move to.</semantics>
                </field>
                <field>
                    <name>Path</name>
                    <dataType>LocationStructArray</dataType>
                    <semantics>Route to the specified entity. If not specified, take the linear path.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveByRouteTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for MoveByRoute.</semantics>
                <field>
                    <name>Route</name>
                    <dataType>ArrayOfWaypoints</dataType>
                    <semantics>Each waypoint includes the speed of movement to the waypoint.</semantics>
                </field>
                <field>
                    <name>MoveType</name>
                    <dataType>MoveTypeEnum32</dataType>
                    <semantics>Indicates if roads have to be followed.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ObserveTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for Observe task.</semantics>
                <field>
                    <name>ObservationArea</name>
                    <dataType>LocationStructArray</dataType>
                    <semantics>Area to observe.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ChangeHeadingTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data to turn to the specified heading.</semantics>
                <field>
                    <name>Heading</name>
                    <dataType>DirectionDegreesFloat32</dataType>
                    <semantics>The heading an entity has to turn to.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>ElapsedTimeProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Progress definition for tasks only needing elapsed time.</semantics>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Elapsed time since beginning of task</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>FireTaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for Fire tasks.</semantics>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Elapsed time since beginning of task.</semantics>
                </field>
                <field>
                    <name>MunitionUsed</name>
                    <dataType>Integer16</dataType>
                    <semantics>Number of rounds used if specified.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>MoveTaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for all move tasks with a path. If the next waypoint index &lt; the last waypoint index, it indicates the reverse movement along a route.</semantics>
                <field>
                    <name>LastPassedWaypointIndex</name>
                    <dataType>Integer32</dataType>
                    <semantics>Index of last passed waypoint.</semantics>
                </field>
                <field>
                    <name>NextWaypointIndex</name>
                    <dataType>Integer32</dataType>
                    <semantics>Index of next waypoint.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>PatrolTaskProgress</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task progress data for PatrolRepeating tasks.</semantics>
                <field>
                    <name>PathProgress</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics>Progress of the current path.</semantics>
                </field>
                <field>
                    <name>ElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Time elapsed for entire task.</semantics>
                </field>
                <field>
                    <name>IntervalElapsedTime</name>
                    <dataType>TimeMillisecondInt64</dataType>
                    <semantics>Time elapsed in the latest interval.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>RoundStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Details of munition fired.</semantics>
                <field>
                    <name>WeaponType</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred weapon type.</semantics>
                </field>
                <field>
                    <name>MunitionType</name>
                    <dataType>EntityTypeStruct</dataType>
                    <semantics>Preferred muntion type.</semantics>
                </field>
                <field>
                    <name>QuantityFired</name>
                    <dataType>Integer16</dataType>
                    <semantics>Number of rounds to fire.</semantics>
                </field>
                <field>
                    <name>RateOfFire</name>
                    <dataType>Float32</dataType>
                    <semantics>Number of rounds per second.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>EmptyTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>No task parameters.</semantics>
            </fixedRecordData>
            <fixedRecordData>
                <name>OperateObservationPostTaskStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Task-specific data for OperateObservationPost task.</semantics>
                <field>
                    <name>ObserveTask</name>
                    <dataType>ObserveTaskStruct</dataType>
                    <semantics>Common observe task parameters.</semantics>
                </field>
                <field>
                    <name>Duration</name>
                    <dataType>TimeMicrosecondFloat32</dataType>
                    <semantics>Duration of the observe task (milliseconds). Can be 0</semantics>
                </field>
                <field>
                    <name>ObservationPostId</name>
                    <dataType>UUID</dataType>
                    <semantics>UniqueId of the observatin post to operate.</semantics>
                </field>
            </fixedRecordData>
        </fixedRecordDataTypes>
        <variantRecordDataTypes>
            <variantRecordData>
                <name>TaskDefinitionVariantRecord</name>
                <discriminant>TaskType</discriminant>
                <dataType>TaskTypeEnum</dataType>
                <alternative>
                    <enumerator>Dismount, StopAtSideOfRoad</enumerator>
                    <name>NoTaskParameters</name>
                    <dataType>EmptyTaskStruct</dataType>
                    <semantics>No additional parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>DirectFire</enumerator>
                    <name>DirectFire</name>
                    <dataType>DirectFireTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>IndirectFire</enumerator>
                    <name>IndirectFire</name>
                    <dataType>IndirectFireTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>FollowEntity</enumerator>
                    <name>FollowEntity</name>
                    <dataType>FollowEntityTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveInDirection</enumerator>
                    <name>MoveInDirection</name>
                    <dataType>MoveInDirectionTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveIntoFormation</enumerator>
                    <name>MoveIntoFormation</name>
                    <dataType>MoveIntoFormationTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToEntity</enumerator>
                    <name>MoveToEntity</name>
                    <dataType>MoveToEntityTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocation</enumerator>
                    <name>MoveToLocation</name>
                    <dataType>MoveToLocationTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Mount, EnterFacility</enumerator>
                    <name>Attach</name>
                    <dataType>AttachTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Observe</enumerator>
                    <name>Observe</name>
                    <dataType>ObserveTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>OperateCheckpoint</enumerator>
                    <name>OperateCheckpoint</name>
                    <dataType>OperateCheckpointTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Patrol</enumerator>
                    <name>Patrol</name>
                    <dataType>PatrolTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>ChangeAltitude</enumerator>
                    <name>ChangeAltitude</name>
                    <dataType>ChangeAltitudeTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>ChangeSpeed</enumerator>
                    <name>ChangeSpeed</name>
                    <dataType>ChangeSpeedTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>ChangeHeading</enumerator>
                    <name>ChangeHeading</name>
                    <dataType>ChangeHeadingTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>OtherActivity</enumerator>
                    <name>OtherActivity</name>
                    <dataType>OtherActivityTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <alternative>
                    <enumerator>OperateObservationPost</enumerator>
                    <name>OperateObservationPost</name>
                    <dataType>OperateObservationPostTaskStruct</dataType>
                    <semantics>Task parameters.</semantics>
                </alternative>
                <encoding>HLAextendableVariantRecord</encoding>
                <semantics>Variant record for task definition data.</semantics>
            </variantRecordData>
            <variantRecordData>
                <name>TaskProgressVariantRecord</name>
                <discriminant>TaskType</discriminant>
                <dataType>TaskTypeEnum</dataType>
                <alternative>
                    <enumerator>OperateCheckpoint, OtherActivity, FollowEntity, MoveInDirection, OperateObservationPost</enumerator>
                    <name>ElapsedTime</name>
                    <dataType>ElapsedTimeProgress</dataType>
                    <semantics>Keeps track of elapesed time.</semantics>
                </alternative>
                <alternative>
                    <enumerator>DirectFire, IndirectFire</enumerator>
                    <name>FireTask</name>
                    <dataType>FireTaskProgress</dataType>
                    <semantics>Keeps track of elapesed time and spent munition.</semantics>
                </alternative>
                <alternative>
                    <enumerator>MoveToLocation, MoveByRoute, </enumerator>
                    <name>MoveOnPath</name>
                    <dataType>MoveTaskProgress</dataType>
                    <semantics>Keeps track of achieved waypoints.</semantics>
                </alternative>
                <alternative>
                    <enumerator>Patrol</enumerator>
                    <name>Patrol</name>
                    <dataType>PatrolTaskProgress</dataType>
                    <semantics>Keeps track of achieved waypoints and elapsed time.</semantics>
                </alternative>
                <encoding>HLAextendableVariantRecord</encoding>
                <semantics>Variant record for task progress data.</semantics>
            </variantRecordData>
        </variantRecordDataTypes>
    </dataTypes>
    <notes>
        <note>
            <label>netn-etr_1</label>
            <semantics>## Overview 
The NETN-ETR module defines extensions of the RPR-FOM object classes `BaseEntity`, `AggregateEntity`, `Lifeform`, and `Platform` to represent the planned, current and previous tasks assigned to simulated entities. 
 
Tasking, reporting and simulation control use the following base interaction classes: 
 
* `ETR_Task` is a base class for tasking 
* `ETR_Report` is a base class for reports 
* `ETR_SimCon`  is a base class for simulation control 
 
### Tasks 
 
In a standard pattern for tasking a simulation entity, a tasking federate sends a `RequestTask` subclass interaction with the appropriate task parameters, which includes a reference to the simulation entity intended to execute the task. The application responsible for modelling the entity responds with a `TaskStatusUpdate` notification to indicate task status and performs the task when appropriate. 
 
The `TaskStatusUpdate` interaction provides the following notifications regarding the task: 
 
* Accepted: the task is received and scheduled for execution 
* Refused: the task is not accepted for execution 
* Waiting: the task is waiting for execution 
* Executing: the task is running 
* Completed: the task has been executed successfully 
* Cancelled: the task execution has been explicitly terminated 
* Error: the task execution has been terminated due to a modelling error 
 
```mermaid 
sequenceDiagram 
autonumber 
Tasking Federate-&gt;&gt;Entity Simulation:RequestTask(TaskParameters) 
Note left of Entity Simulation: Task Received 
Entity Simulation-&gt;&gt;Tasking Federate:TaskStatusUpdate(Accepted) 
Note left of Entity Simulation: Task Waiting 
Entity Simulation-&gt;&gt;Tasking Federate:TaskStatusUpdate(Waiting) 
Entity Simulation-&gt;&gt;Tasking Federate:TaskStatusUpdate(Executing) 
Note left of Entity Simulation: Task Executing 
Entity Simulation-&gt;&gt;Tasking Federate:TaskStatusUpdate(Completed) 
Note left of Entity Simulation: Task Completed 
```` 
1. A tasking federate sends one of the `RequestTask` subclass interactions 
2. The federate responsible for simulating the entity responds with a `TaskStatusUpdate` indicating that the task is accepted. If the task is not supported, send a `TaskStatusUpdate` indicating `Refused`. 
3. If there is a delay until the execution, the entity simulation sends a `TaskStatusUpdate` indicating that the task is waiting. 
4. A `TaskStatusUpdate` indicates that the task started executing. 
5. A `TaskStatusUpdate` indicates successful completion of task execution. 
 
A task can execute concurrently with other tasks or sequentially. The `RequestTask` task parameters indicate the expected mode of task execution. The receiving federate application determines if it can fulfil the concurrent or non-concurrent task mode request and accept the task. Tasks are scheduled based on their start time and task execution mode. 
 
The execution of a task can start if: 
 
* For a non-concurrent task 
* No other non-concurrent task is executing 
* The task has the earliest `StartTime` parameter of all planned non-concurrent tasks 
* The task parameter `StartTime` is less than or equal to the current `ScenarioTime`. 
* For a concurrent task 
* The task parameter `StartTime` is less than or equal to the current `ScenarioTime`. 
 
Scheduled tasks are published using the `PlannedTasks` attribute of the simulated entity. 
 
Currently executing tasks and their execution progress are published using the simulated entity's `CurrentTasks` and `TaskProgress` attributes. 
 
Completed tasks are published using the `PreviousTasks` attribute of the simulated entity. 
 
Use the `SupportedTasks` attribute available for all simulated `Platform`, `Lifeform` and `AggregatedEntity` entities to indicate which tasks are supported. Normally, a tasking federate check supported tasks before sending a `TaskRequest` to avoid unnecessary `TaskStatusUpdate` with refusal to accept the task. 
 
 
#### Task Delegation 
 
A federate application may need to delegate the execution of some tasks to some other federate. Use `RequestTaskDelegation` to request a `FederateApplication` to execute a task based on a `TaskDefinition`. The progress of the task execution is published using a corresponding `DelegatedTask` object. Once execution is complete, remove the `DelegatedTask` object instance from the federation.</semantics>
        </note>
        <note>
            <label>netn-etr_2</label>
            <semantics>* Changed dependencies to NETN-Physical 
 
* Added `ETR_Report` parameter `ReportingEntity` 
* Changed `ETR_Report` parameter `ReportId` datatype to `UUID` 
* Replaced `ETR_Report` parameter `When` with NETN-BASE `HLAinteractionRoot` parameter `Time` 
* Moved `ETR_Report` parameter `CommunicationNetworkIds` to NETN-COM `ETR_Report 
* Replaced `InWeaponRange` parameter `Observer` with `ETR_Report` parameter `ReportingEntity` 
* Replaced `SpotReport` parameter `Observer` with `ETR_Report` parameter `ReportingEntity` 
* Added `SpotReport` parameter `SensorType` 
* Removed `SensorReport` interaction class 
* Replaced `StatusReport` parameter `EntityId` with `ETR_Report` parameter `ReportingEntity` 
* Removed `StatusReport` interaction class 
* Changed `PositionStatusReport` parameter `Position` datatype to `LocationStruct` 
* Changed `PositionStatusReport` parameter `Heading` datatype to `DirectionDegreesFloat32` 
* Changed `ResourceStatusReport` parameter `Resource` datatype to `SupplyStruct` 
* Changed `UnderAttackStatusReport` parameter `FromDirection` datatype to `DirectionDegreesFloat32` 
 
* Replaced `ETR_SimCon` parameter `TaskId` with NETN-BASE `HLAinteractionRoot` parameter `UniqueId` 
* Replaced `ETR_SimCon` parameter `Taskee` with `ETR_Report` parameter `SimulatedEntity` 
* Removed `ETR_SimCon` parameter `Tasker` 
* Removed `CapabilitiesSupported` interaction class 
* Removed `QueryCapabilitiesSupported` interaction class 
* Changed `MagicMove` parameter `Heading` datatype to `DirectionDegreesFloat32` 
* Changed `MagicMove` parameter `Location` datatype to `LocationStruct` 
* Removed `MagicMove` parameter `LocationUuid` 
* Changed `MagicResource` parameter `Resource` datatype to `SupplyStruct` 
* Renamed `MagicResource` interaction class to `UpdateResource` 
* Added `RequestCurrentSensorDetections` interaction class 
* Added `Response` interaction class 
 
* Renamed `ETR_Task` interaction class to `RequestTask` 
* Renamed `ETR_TaskManagement` interaction class to `ETR_Task` 
* Moved  (old) `ETR_Task` as a sub-class of  (new) `ETR_Task` 
 
* Renamed (old) `ETR_TaskManagement` parameter `Taskee` to new `ETR_Task` parameter `TaskedEntity` 
* Removed (old) `ETR_TaskManagement` parameter `CommunicationNetworkIds` 
* Removed (old) `ETR_TaskManagement` parameter `Tasker` 
* Replaced (old) `ETR_TaskManagement` parameter `TaskManagementId` with NETN-BASE `HLAinteractionRoot` parameter `UniqueId` 
 
* Changed (old) `ETR_Task` parameter `TaskId` datatype to `UUID` 
* Changed (old) `ETR_Task` parameter `StartWhen` datatype to `EpochTime` 
* Renamed (old) `ETR_Task` parameter `Why` to `Annotation` 
* Moved (old) `ETR_Task` parameter `CommunicationNetworkIds` to NETN-COM `ETR_Report 
* Replaced (old) `ETR_Task` parameter `Taskee` with (new) `ETR_Task` parameter `TaskedEntity` 
 
* Added `RequestTask` parameter `MainTask` 
* Added `RequestTask` parameter `PreviousTask` 
* Added `RequestTask` parameter `NextTask` 
 
* Merged `CancelAllTasks` and `CancelSpecifiedTasks` into `RequestCancelTask` 
* Changed `CancelTask` parameter `Tasks` datatype to `ArrayOfUuid` 
 
* Changed `TaskStatusReport` parameter `TaskId` datatype to `UUID` 
* Renamed `TaskStatusReport` parameter `TaskId` to `Task` 
* Replaced `TaskStatusReport` parameter `When` with NETN-BASE `HLAinteractionRoot` parameter `Time` 
 
* Added `RequestTaskStatus` interaction class 
* Added `RequestTaskDelegation` interaction class 
 
* Moved `SetRulesOfEngagement` interaction class as sub-class of `ETR_SimCon` 
* Replaced all task interaction parameters with `TaskParameters` with different datatypes for each task type. 
* Moved `AddPassage` interaction class to NETN-SE `CreateBreach` 
* Moved `ClearObstacle` interaction class to NETN-SE `ClearEngineering` 
* Moved `CreateObstacle` interaction class to NETN-SE `CreateObstacle` 
* Moved `CreateMinefield` interaction class to NETN-SE `LayMinefield` 
* Moved `EstablishCheckPoint` interaction class to NETN-SE `EstablishCheckpoint` 
* Moved `RemoveCheckPoint` interaction class to NETN-SE `ClearEngineering` 
* Moved `RemovePassage` interaction class to NETN-SE `ClearEngineering` 
* Moved `DisruptCommunication` interaction class to NETN-COM `DisruptCommunication` 
* Moved `SetTransmitterStatus` interaction class to NETN-COM `SetTransmitterStatus` 
* Removed `TurnToOrientation` interaction class 
* Merged `PatrolRepeating` and `Patrol` interaction classes to `Patrol` 
* Merged `FireAtEntity` and `FireAtEntityWM` interaction classes to `DirectFire` 
* Merged `FireAtLocation` and `FireAtLocationWM` interaction classes to `IndirectFire` 
* Renamed `Move` interaction class to `MoveInDirection` 
* Added `MoveByRoute` interaction class 
* Renamed `OperateCheckPoint` interaction class to `OperateCheckpoint` 
* Removed `MoveToEntity` interaction class 
* Renamed `SetOrderedAltitude` interaction class to `ChangeAltitude` 
* Renamed `SetOrderedSpeed` interaction class to `ChangeSpeed` 
* Renamed `TurnToHeading` interaction class to `ChangeHeading` 
 
* Added objectClass `DelegatedTask` 

* Added `BaseEntity` attribute `SupportedTasks` 
* Added `BaseEntity` attribute `TaskProgress` 
* Added `BaseEntity` attribute `CurrentTasks` 
* Added `BaseEntity` attribute `PlannedTasks` 
* Added `BaseEntity` attribute `PreviousTasks` 
* Added `BaseEntity` attribute `CaptureStatus` 
 
 
* Removed datatype `MineCountEnum32` 
* Added datatype `TaskTypeEnum` 
* Removed datatype `Datetime18` 
* Removed datatype `ArrayOfTaskIds` 
* Removed datatype `ArrayOfNames` 
* Added datatype `ArrayOfTaskTypes` 
* Added datatype `ArrayOfTaskDefinitions` 
* Added datatype `ArrayOfTaskProgress` 
* Added datatype `ArrayOfWaypoints` 
* Added struct datatypes for each task type with task parameters 
* Added struct datatypes for task progress (various) 
* Added datatype `RoundStruct` 
* Added datatype `TaskDefinition` 
* Added datatype `TaskProgress` 
* Added datatype `Waypoint` 
* Removed datatype `MineCountVariantStruct` 
* Added datatype `TaskDefinitionVariantRecord` 
* Added datatype `TaskProgressVariantRecord` 
 
* Changed datatype `SpottedEntity` field `Orientation` to `Heading`</semantics>
        </note>
        <note>
            <label>netn-etr_3</label>
            <semantics>* Added a new attribute to ETR_Task: CommunicationNetworkIdentifiers 
* Added new Task: DisruptCommunicaction 
* Added new Task: Observe 
* Added SetTransmitterStatus 
* Added MagicMove 
* Added MagicResource* Added QuerySupportedCapabilities interaction 
* Added CapabilitiesSupported interaction 
* Added EstablishCheckPoint 
* Added OperateCheckPoint 
* Added RemoveCheckPoint 
* Added StopAtSideOfRoad 
* Added CreateObstacle 
* Added CreateMinefield 
* Added ClearObstacle 
* Added AddPassage 
* Added RemovePassage 
* Added Patrol 
* Added PatrolRepeating 
 
* Removed FollowRoute 
 
* Renamed MoveToUnit to MoveToEntity 
* Renamed FollowUnit to FollowEntity 
* Renamed VehicleMount to Mount 
* Renamed VehicleDismount to Dismount 
* Renamed FireIndirectWM to FireAtLocationWM 
* Renamed FireAtUnit to FireAtEntity 
* Renamed FireDirectWM to FireAtEntityWM 
* Renamed ChangeOrderedSpeed to SetOrderedSpeed 
* Renamed ChangeOrderedAltitude to SetOrderedAltitude 
* Renamed Parameter SensorReport.SpottedEnities to SpottedEntities. 
* Renamed Parameter MOUNT.EntiityId to EntityId</semantics>
        </note>
        <note>
            <label>netn-etr_4</label>
            <semantics>The NETN-ETR FOM Module is based on the previously released NETN-LLBML FOM module developed by MSG-068, updated by MSG-106 and prepared for release by MSG-134. 
 
The version of LLBML used in AMSP-04 Ed. A. NATO Education and Training Network Federation Architecture and FOM Design (NETN FAFD) is: 
* NETN-LBML_v1.1.0.xml</semantics>
        </note>
    </notes>
</objectModel>
